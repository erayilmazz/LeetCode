/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if(!head) return nullptr;
        if(!(head->next)) return head;
        ListNode* dummyHead = new ListNode(0);
        dummyHead->next = head;
        head = dummyHead;
        ListNode* first = head->next;
        ListNode* second = first -> next;
        ListNode* third = second->next;
        head -> next = second;
        while(third != nullptr && third -> next != nullptr){
            first -> next = third->next;
            second->next = first;
            first = third;
            second = first-> next;
            third = second -> next;
        }
        second->next = first;
        first->next = third;
        return head->next;
    }
};
