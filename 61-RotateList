/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head) return nullptr;
        ListNode* leader = head;
        ListNode* temp = head;
        int len = 0;
        while(temp){
            temp=temp->next;
            len++;
        }
        if(k>len) k %= len;
        for(int i = 0; i<k; ++i){
            if(leader->next == nullptr) leader = head;
            else leader = leader->next;
        }
        if(!leader) leader = head;
        ListNode* last = head;
        while(leader->next != nullptr){
            leader = leader -> next;
            last = last -> next;
        }
        leader->next = head;
        head = last->next;
        last->next = nullptr;
        return head;
    }
};
